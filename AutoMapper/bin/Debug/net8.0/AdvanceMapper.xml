<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AdvanceMapper</name>
    </assembly>
    <members>
        <member name="T:AdvanceMapper.Attribute.IgnoreMapAttribute">
            <summary>
            Attribute to ignore properties during mapping
            </summary>
        </member>
        <member name="T:AdvanceMapper.Attribute.MapToAttribute">
            <summary>
            Attribute to specify custom property mapping
            </summary>
        </member>
        <member name="P:AdvanceMapper.Attribute.MapToAttribute.PropertyName">
            <summary>
            Target property name to map to
            </summary>
        </member>
        <member name="M:AdvanceMapper.Attribute.MapToAttribute.#ctor(System.String)">
            <summary>
            Initialize with target property name
            </summary>
        </member>
        <member name="T:AdvanceMapper.Configuration.MappingProfile">
            <summary>
            Base class for mapping profiles
            </summary>
        </member>
        <member name="M:AdvanceMapper.Configuration.MappingProfile.Configure(AdvanceMapper.Interface.IMapperConfiguration)">
            <summary>
            Configure mappings for this profile
            </summary>
        </member>
        <member name="T:AdvanceMapper.Core.MemberConfigurationExpression`3">
            <summary>
            Fluent configuration for member mapping
            </summary>
        </member>
        <member name="M:AdvanceMapper.Core.MemberConfigurationExpression`3.MapFrom``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Map from a source member
            </summary>
        </member>
        <member name="M:AdvanceMapper.Core.MemberConfigurationExpression`3.MapFrom(System.Func{`0,`2})">
            <summary>
            Map using a custom value resolver
            </summary>
        </member>
        <member name="M:AdvanceMapper.Core.MemberConfigurationExpression`3.Ignore">
            <summary>
            Ignore this member during mapping
            </summary>
        </member>
        <member name="T:AdvanceMapper.Core.TypeMappingExpression`2">
            <summary>
            Fluent configuration for type mapping
            </summary>
        </member>
        <member name="M:AdvanceMapper.Core.TypeMappingExpression`2.ForMember``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            Configure mapping for a specific member
            </summary>
        </member>
        <member name="M:AdvanceMapper.Core.TypeMappingExpression`2.WithOptions(System.Action{AdvanceMapper.Core.MappingOptions})">
            <summary>
            Configure options for this type mapping
            </summary>
        </member>
        <member name="T:AdvanceMapper.Core.MapperConfiguration">
            <summary>
            Mapper configuration implementation
            </summary>
        </member>
        <member name="M:AdvanceMapper.Core.MapperConfiguration.CreateMap``2">
            <summary>
            Create a mapping between source and destination types
            </summary>
        </member>
        <member name="M:AdvanceMapper.Core.Mapper.Map``1(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:AdvanceMapper.Core.Mapper.Map``2(``0)">
            <inheritdoc />
        </member>
        <member name="M:AdvanceMapper.Core.Mapper.Map``2(``0,``1)">
            <inheritdoc />
        </member>
        <member name="M:AdvanceMapper.Core.Mapper.Map``2(System.Collections.Generic.IEnumerable{``0})">
            <inheritdoc />
        </member>
        <member name="T:AdvanceMapper.Core.MappingOptions">
            <summary>
            Configuration options for mapping behavior
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MappingOptions.IgnoreCase">
            <summary>
            Whether to ignore case when matching property names
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MappingOptions.MapNullValues">
            <summary>
            Whether to map null values
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MappingOptions.DeepCopy">
            <summary>
            Whether to perform deep copy of complex objects
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MappingOptions.CustomMappings">
            <summary>
            Custom property name mappings
            </summary>
        </member>
        <member name="T:AdvanceMapper.Core.MemberMapping">
            <summary>
            Configuration for individual member mapping
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MemberMapping.DestinationMember">
            <summary>
            Destination member name
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MemberMapping.SourceMember">
            <summary>
            Source member name
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MemberMapping.ValueResolver">
            <summary>
            Custom value resolver function
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.MemberMapping.Ignore">
            <summary>
            Whether to ignore this member
            </summary>
        </member>
        <member name="T:AdvanceMapper.Core.TypeMapping">
            <summary>
            Configuration for type-to-type mapping
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.TypeMapping.SourceType">
            <summary>
            Source type
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.TypeMapping.DestinationType">
            <summary>
            Destination type
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.TypeMapping.MemberMappings">
            <summary>
            Member-specific mappings
            </summary>
        </member>
        <member name="P:AdvanceMapper.Core.TypeMapping.Options">
            <summary>
            Mapping options for this type mapping
            </summary>
        </member>
        <member name="T:AdvanceMapper.Extension.ObjectMapperExtensions">
            <summary>
            Extension methods for easier object mapping
            </summary>
        </member>
        <member name="M:AdvanceMapper.Extension.ObjectMapperExtensions.MapTo``1(System.Object,AdvanceMapper.Interface.IMapper)">
            <summary>
            Map an object to the specified destination type
            </summary>
        </member>
        <member name="M:AdvanceMapper.Extension.ObjectMapperExtensions.MapToList``2(System.Collections.Generic.IEnumerable{``0},AdvanceMapper.Interface.IMapper)">
            <summary>
            Map a collection to the specified destination type
            </summary>
        </member>
        <member name="T:AdvanceMapper.Extension.ServiceCollectionExtensions">
            <summary>
            Extension methods for IServiceCollection
            </summary>
        </member>
        <member name="M:AdvanceMapper.Extension.ServiceCollectionExtensions.AddAdvancedObjectMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{AdvanceMapper.Interface.IMapperConfiguration})">
            <summary>
            Add AdvancedObjectMapper to the service collection
            </summary>
        </member>
        <member name="M:AdvanceMapper.Extension.ServiceCollectionExtensions.AddAdvancedObjectMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Type[])">
            <summary>
            Add AdvancedObjectMapper with profiles to the service collection
            </summary>
        </member>
        <member name="M:AdvanceMapper.Extension.ServiceCollectionExtensions.AddAdvancedObjectMapper(Microsoft.Extensions.DependencyInjection.IServiceCollection,AdvanceMapper.Interface.IMappingProfile[])">
            <summary>
            Add AdvancedObjectMapper with profile instances to the service collection
            </summary>
        </member>
        <member name="T:AdvanceMapper.Interface.IMapper">
            <summary>
            Interface for the advanced object mapper
            </summary>
        </member>
        <member name="M:AdvanceMapper.Interface.IMapper.Map``1(System.Object)">
            <summary>
            Maps an object to the specified destination type
            </summary>
        </member>
        <member name="M:AdvanceMapper.Interface.IMapper.Map``2(``0)">
            <summary>
            Maps an object of the specified source type to the destination type
            </summary>
        </member>
        <member name="M:AdvanceMapper.Interface.IMapper.Map``2(``0,``1)">
            <summary>
            Maps to an existing destination object
            </summary>
        </member>
        <member name="M:AdvanceMapper.Interface.IMapper.Map``2(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Maps a collection of objects
            </summary>
        </member>
        <member name="T:AdvanceMapper.Interface.IMappingProfile">
            <summary>
            Interface for mapping profile configuration
            </summary>
        </member>
        <member name="M:AdvanceMapper.Interface.IMappingProfile.Configure(AdvanceMapper.Interface.IMapperConfiguration)">
            <summary>
            Configure mappings for this profile
            </summary>
        </member>
        <member name="T:AdvanceMapper.Interface.IMapperConfiguration">
            <summary>
            Interface for mapper configuration
            </summary>
        </member>
        <member name="M:AdvanceMapper.Interface.IMapperConfiguration.CreateMap``2">
            <summary>
            Create a mapping between source and destination types
            </summary>
        </member>
    </members>
</doc>
